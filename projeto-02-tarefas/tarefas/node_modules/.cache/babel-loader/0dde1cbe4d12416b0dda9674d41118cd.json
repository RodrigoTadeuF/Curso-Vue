{"remainingRequest":"C:\\Users\\rodri\\Desktop\\curso vue\\projeto-02-tarefas\\tarefas\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\rodri\\Desktop\\curso vue\\projeto-02-tarefas\\tarefas\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\rodri\\Desktop\\curso vue\\projeto-02-tarefas\\tarefas\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\rodri\\Desktop\\curso vue\\projeto-02-tarefas\\tarefas\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\rodri\\Desktop\\curso vue\\projeto-02-tarefas\\tarefas\\src\\App.vue","mtime":1578238338821},{"path":"C:\\Users\\rodri\\Desktop\\curso vue\\projeto-02-tarefas\\tarefas\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\rodri\\Desktop\\curso vue\\projeto-02-tarefas\\tarefas\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\rodri\\Desktop\\curso vue\\projeto-02-tarefas\\tarefas\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\rodri\\Desktop\\curso vue\\projeto-02-tarefas\\tarefas\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TaskProgress from './components/TaskProgress.vue';\nimport NewTask from './components/NewTask.vue';\nimport TaskGrid from './components/TaskGrid.vue';\nexport default {\n  components: {\n    TaskProgress: TaskProgress,\n    NewTask: NewTask,\n    TaskGrid: TaskGrid\n  },\n  data: function data() {\n    return {\n      tasks: []\n    };\n  },\n  computed: {\n    progress: function progress() {\n      var total = this.tasks.length;\n      var done = this.tasks.filter(t = !t.pending).length;\n      return Math.round(done / total * 100) || 0;\n    }\n  },\n  methods: {\n    addTask: function addTask(task) {\n      var sameName = function sameName(t) {\n        return t.name === task.name;\n      };\n\n      var reallyNew = this.tasks.filter(sameName).length == 0;\n\n      if (reallyNew) {\n        this.tasks.push({\n          name: task.name,\n          pending: task.pending || true\n        });\n      }\n    },\n    deleteTask: function deleteTask(i) {\n      this.tasks.splice(i, 1);\n    },\n    toggleTaskState: function toggleTaskState(i) {\n      this.tasks[i].pending = !this.tasks[i].pending;\n    }\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAaA,OAAA,YAAA,MAAA,+BAAA;AACA,OAAA,OAAA,MAAA,0BAAA;AACA,OAAA,QAAA,MAAA,2BAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,YAAA,EAAA,YAAA;AAAA,IAAA,OAAA,EAAA,OAAA;AAAA,IAAA,QAAA,EAAA;AAAA,GADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,QAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,UAAA,KAAA,GAAA,KAAA,KAAA,CAAA,MAAA;AACA,UAAA,IAAA,GAAA,KAAA,KAAA,CAAA,MAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,OAAA,EAAA,MAAA;AACA,aAAA,IAAA,CAAA,KAAA,CAAA,IAAA,GAAA,KAAA,GAAA,GAAA,KAAA,CAAA;AACA;AALA,GAPA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,mBACA,IADA,EACA;AACA,UAAA,QAAA,GAAA,SAAA,QAAA,CAAA,CAAA;AAAA,eAAA,CAAA,CAAA,IAAA,KAAA,IAAA,CAAA,IAAA;AAAA,OAAA;;AACA,UAAA,SAAA,GAAA,KAAA,KAAA,CAAA,MAAA,CAAA,QAAA,EAAA,MAAA,IAAA,CAAA;;AACA,UAAA,SAAA,EAAA;AACA,aAAA,KAAA,CAAA,IAAA,CAAA;AACA,UAAA,IAAA,EAAA,IAAA,CAAA,IADA;AAEA,UAAA,OAAA,EAAA,IAAA,CAAA,OAAA,IAAA;AAFA,SAAA;AAIA;AACA,KAVA;AAWA,IAAA,UAXA,sBAWA,CAXA,EAWA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA;AACA,KAbA;AAcA,IAAA,eAdA,2BAcA,CAdA,EAcA;AACA,WAAA,KAAA,CAAA,CAAA,EAAA,OAAA,GAAA,CAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAAA;AACA;AAhBA;AAdA,CAAA","sourcesContent":["<template>\n\t<div id=\"app\">\n\t\t<h1>Tarefas</h1>\n\t\t<TasksProgress :progress=\"progress\" />\n\t\t<NewTask @taskAdded=\"addTask\"/>\n\t\t<TaskGrid :tasks=\"tasks\"\n\t\t\t@taskDeleted=\"deleteTask\" \n\t\t\t@taskStateChanged=\"toggleTaskState\" \n\t\t\t/>\n\t</div>\n</template>\n\n<script>\nimport TaskProgress from './components/TaskProgress.vue'\nimport NewTask from './components/NewTask.vue'\nimport TaskGrid from './components/TaskGrid.vue'\n\nexport default {\n\tcomponents: { TaskProgress, NewTask, TaskGrid },\n\tdata() {\n\t\treturn {\n\t\t\ttasks: []\n\t\t}\n\t},\n\tcomputed: {\n\t\tprogress() {\n\t\t\tconst total = this.tasks.length\n\t\t\tconst done = this.tasks.filter(t = !t.pending).length\n\t\t\treturn Math.round(done / total * 100) || 0\n\t\t}\n\t},\n\tmethods: {\n\t\taddTask(task) {\n\t\t\tconst sameName = t => t.name === task.name\n\t\t\tconst reallyNew = this.tasks.filter(sameName).length == 0\n\t\t\tif(reallyNew) {\n\t\t\t\tthis.tasks .push({\n\t\t\t\t\tname: task.name,\n\t\t\t\t\tpending: task.pending || true\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\tdeleteTask(i) {\n\t\t\tthis.tasks.splice(i, 1)\n\t\t},\n\t\ttoggleTaskState(i) {\n\t\t\tthis.tasks[i].pending = !this.tasks[i].pending\n\t\t}\n\t}\n}\n</script>\n\n<style>\n\tbody {\n\t\tfont-family: 'Lato', sans-serif;\n\t\tbackground: linear-gradient(to right, rgb(22, 34, 42), rgb(58, 96, 115));\n\t\tcolor: #FFF;\n\t}\n\n\t#app {\n\t\tdisplay: flex;\n\t\tflex: 1;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\theight: 100vh;\n\t}\n\n\t#app h1 {\n\t\tmargin-bottom: 5px;\n\t\tfont-weight: 300;\n\t\tfont-size: 3rem;\n\t}\n</style>\n"],"sourceRoot":"src"}]}